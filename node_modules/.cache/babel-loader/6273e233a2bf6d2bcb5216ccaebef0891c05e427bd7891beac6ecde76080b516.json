{"ast":null,"code":"var _jsxFileName = \"D:\\\\DOCUMENTS\\\\MCV\\\\REACT\\\\portfolio-proj\\\\src\\\\components\\\\modal\\\\ImageViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\n\n// Set app element for accessibility reasons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nfunction ImageViewer({\n  src,\n  alt = ''\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Function to open the modal\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  // Function to close the modal\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: src,\n      alt: alt,\n      loading: \"lazy\",\n      className: \"h-full w-full object-cover object-center transition duration-200 group-hover:scale-110\",\n      onClick: openModal // Open modal when the image is clicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onRequestClose: closeModal,\n      contentLabel: \"Image Modal\",\n      style: {\n        overlay: {\n          backgroundColor: 'rgba(0, 0, 0, 0.75)'\n        },\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          minHeight: '300px',\n          minWidth: '400px',\n          maxWidth: '80%',\n          maxHeight: '80%'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        style: {\n          position: 'absolute',\n          top: '10px',\n          right: '10px',\n          backgroundColor: 'gray',\n          color: 'white',\n          padding: '5px',\n          border: 'none',\n          borderRadius: '20%',\n          // Ensures the button is rounded\n          cursor: 'pointer',\n          width: '40px',\n          // Set width and height to the same value\n          height: '40px',\n          // Set width and height to the same value\n          display: 'flex',\n          // Ensure content is centered\n          alignItems: 'center',\n          // Center text vertically\n          justifyContent: 'center' // Center text horizontally\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: src,\n        alt: alt,\n        style: {\n          maxWidth: '100%',\n          maxHeight: '100%',\n          objectFit: 'contain' // Use objectFit: 'contain' to avoid distortion\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageViewer, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = ImageViewer;\nexport default ImageViewer;\nvar _c;\n$RefreshReg$(_c, \"ImageViewer\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","setAppElement","ImageViewer","src","alt","_s","isOpen","setIsOpen","openModal","closeModal","children","loading","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onRequestClose","contentLabel","style","overlay","backgroundColor","content","top","left","right","bottom","marginRight","transform","minHeight","minWidth","maxWidth","maxHeight","position","color","padding","border","borderRadius","cursor","width","height","display","alignItems","justifyContent","objectFit","_c","$RefreshReg$"],"sources":["D:/DOCUMENTS/MCV/REACT/portfolio-proj/src/components/modal/ImageViewer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\n// Set app element for accessibility reasons\r\nModal.setAppElement('#root');\r\n\r\nfunction ImageViewer({ src, alt = '' }) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    // Function to open the modal\r\n    const openModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n\r\n    // Function to close the modal\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* Image component */}\r\n            <img\r\n                src={src}\r\n                alt={alt}\r\n                loading=\"lazy\"\r\n                className=\"h-full w-full object-cover object-center transition duration-200 group-hover:scale-110\"\r\n                onClick={openModal} // Open modal when the image is clicked\r\n            />\r\n\r\n            {/* Modal component */}\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onRequestClose={closeModal}\r\n                contentLabel=\"Image Modal\"\r\n                style={{\r\n                    overlay: {\r\n                        backgroundColor: 'rgba(0, 0, 0, 0.75)',\r\n                    },\r\n                    content: {\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        right: 'auto',\r\n                        bottom: 'auto',\r\n                        marginRight: '-50%',\r\n                        transform: 'translate(-50%, -50%)',\r\n                        minHeight: '300px',\r\n                        minWidth: '400px',\r\n                        maxWidth: '80%',\r\n                        maxHeight: '80%',\r\n                    },\r\n                }}\r\n            >\r\n                {/* Close button */}\r\n                <button\r\n    onClick={closeModal}\r\n    style={{\r\n        position: 'absolute',\r\n        top: '10px',\r\n        right: '10px',\r\n        backgroundColor: 'gray',\r\n        color: 'white',\r\n        padding: '5px',\r\n        border: 'none',\r\n        borderRadius: '20%', // Ensures the button is rounded\r\n        cursor: 'pointer',\r\n        width: '40px', // Set width and height to the same value\r\n        height: '40px', // Set width and height to the same value\r\n        display: 'flex', // Ensure content is centered\r\n        alignItems: 'center', // Center text vertically\r\n        justifyContent: 'center', // Center text horizontally\r\n    }}\r\n>\r\n    X\r\n</button>\r\n\r\n\r\n                {/* Display the larger image */}\r\n                <img\r\n                    src={src}\r\n                    alt={alt}\r\n                    style={{\r\n                        maxWidth: '100%',\r\n                        maxHeight: '100%',\r\n                        objectFit: 'contain', // Use objectFit: 'contain' to avoid distortion\r\n                    }}\r\n                />\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageViewer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,aAAa;;AAE/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAF,KAAK,CAACG,aAAa,CAAC,OAAO,CAAC;AAE5B,SAASC,WAAWA,CAAC;EAAEC,GAAG;EAAEC,GAAG,GAAG;AAAG,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA,MAAMW,SAAS,GAAGA,CAAA,KAAM;IACpBD,SAAS,CAAC,IAAI,CAAC;EACnB,CAAC;;EAED;EACA,MAAME,UAAU,GAAGA,CAAA,KAAM;IACrBF,SAAS,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,oBACIP,OAAA;IAAAU,QAAA,gBAEIV,OAAA;MACIG,GAAG,EAAEA,GAAI;MACTC,GAAG,EAAEA,GAAI;MACTO,OAAO,EAAC,MAAM;MACdC,SAAS,EAAC,wFAAwF;MAClGC,OAAO,EAAEL,SAAU,CAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eAGFjB,OAAA,CAACF,KAAK;MACFQ,MAAM,EAAEA,MAAO;MACfY,cAAc,EAAET,UAAW;MAC3BU,YAAY,EAAC,aAAa;MAC1BC,KAAK,EAAE;QACHC,OAAO,EAAE;UACLC,eAAe,EAAE;QACrB,CAAC;QACDC,OAAO,EAAE;UACLC,GAAG,EAAE,KAAK;UACVC,IAAI,EAAE,KAAK;UACXC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdC,WAAW,EAAE,MAAM;UACnBC,SAAS,EAAE,uBAAuB;UAClCC,SAAS,EAAE,OAAO;UAClBC,QAAQ,EAAE,OAAO;UACjBC,QAAQ,EAAE,KAAK;UACfC,SAAS,EAAE;QACf;MACJ,CAAE;MAAAvB,QAAA,gBAGFV,OAAA;QACZa,OAAO,EAAEJ,UAAW;QACpBW,KAAK,EAAE;UACHc,QAAQ,EAAE,UAAU;UACpBV,GAAG,EAAE,MAAM;UACXE,KAAK,EAAE,MAAM;UACbJ,eAAe,EAAE,MAAM;UACvBa,KAAK,EAAE,OAAO;UACdC,OAAO,EAAE,KAAK;UACdC,MAAM,EAAE,MAAM;UACdC,YAAY,EAAE,KAAK;UAAE;UACrBC,MAAM,EAAE,SAAS;UACjBC,KAAK,EAAE,MAAM;UAAE;UACfC,MAAM,EAAE,MAAM;UAAE;UAChBC,OAAO,EAAE,MAAM;UAAE;UACjBC,UAAU,EAAE,QAAQ;UAAE;UACtBC,cAAc,EAAE,QAAQ,CAAE;QAC9B,CAAE;QAAAlC,QAAA,EACL;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAIOjB,OAAA;QACIG,GAAG,EAAEA,GAAI;QACTC,GAAG,EAAEA,GAAI;QACTgB,KAAK,EAAE;UACHY,QAAQ,EAAE,MAAM;UAChBC,SAAS,EAAE,MAAM;UACjBY,SAAS,EAAE,SAAS,CAAE;QAC1B;MAAE;QAAA/B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACZ,EAAA,CApFQH,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AAsFpB,eAAeA,WAAW;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}