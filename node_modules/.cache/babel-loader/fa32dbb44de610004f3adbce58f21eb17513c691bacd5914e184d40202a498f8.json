{"ast":null,"code":"var _jsxFileName = \"D:\\\\DOCUMENTS\\\\MCV\\\\REACT\\\\portfolio-proj\\\\src\\\\components\\\\modal\\\\DescModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DescModal = ({\n  downloadUrl,\n  description\n}) => {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const handleOpenModal = () => {\n    setModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n  const handleDownload = () => {\n    // Add your logic to initiate download\n    window.location.href = downloadUrl;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      onClick: handleOpenModal,\n      children: \"Show Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalOpen,\n      onRequestClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: handleCloseModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDownload,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(DescModal, \"CMfkJY0oHKX43wkRh7WkxSiVV1E=\");\n_c = DescModal;\nexport default DescModal;\nvar _c;\n$RefreshReg$(_c, \"DescModal\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","DescModal","downloadUrl","description","_s","modalOpen","setModalOpen","handleOpenModal","handleCloseModal","handleDownload","window","location","href","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","className","_c","$RefreshReg$"],"sources":["D:/DOCUMENTS/MCV/REACT/portfolio-proj/src/components/modal/DescModal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst DescModal = ({ downloadUrl, description }) => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const handleOpenModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    // Add your logic to initiate download\r\n    window.location.href = downloadUrl;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <a href=\"#\" onClick={handleOpenModal}>\r\n        Show Description\r\n      </a>\r\n      <Modal isOpen={modalOpen} onRequestClose={handleCloseModal}>\r\n        <div className=\"modal-content\">\r\n          <span className=\"close\" onClick={handleCloseModal}>\r\n            &times;\r\n          </span>\r\n          <p>{description}</p>\r\n          <button onClick={handleDownload}>Download</button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DescModal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC5BD,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7BF,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGV,WAAW;EACpC,CAAC;EAED,oBACEF,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAGY,IAAI,EAAC,GAAG;MAACE,OAAO,EAAEP,eAAgB;MAAAM,QAAA,EAAC;IAEtC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJlB,OAAA,CAACF,KAAK;MAACqB,MAAM,EAAEd,SAAU;MAACe,cAAc,EAAEZ,gBAAiB;MAAAK,QAAA,eACzDb,OAAA;QAAKqB,SAAS,EAAC,eAAe;QAAAR,QAAA,gBAC5Bb,OAAA;UAAMqB,SAAS,EAAC,OAAO;UAACP,OAAO,EAAEN,gBAAiB;UAAAK,QAAA,EAAC;QAEnD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPlB,OAAA;UAAAa,QAAA,EAAIV;QAAW;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBlB,OAAA;UAAQc,OAAO,EAAEL,cAAe;UAAAI,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACd,EAAA,CAhCIH,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAkCf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}